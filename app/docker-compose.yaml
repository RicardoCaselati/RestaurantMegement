version: '3.9'
services:
  frontend:
    build: ./Frontend
    ports:
      - 3000:5173
    volumes:
      - ./Frontend:/app-frontend
    platform: linux/x86_64
    working_dir: /app-frontend
    environment:
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:5173"]
      timeout: 10s
      retries: 5

  backend:
    container_name: app_backend
    build: ./backend
    ports:
      - 3001:3001
    restart: 'always'
    platform: linux/x86_64
    working_dir: /app-backend
    volumes:
      - ./backend:/app-backend
      - /app-backend/node_modules
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - APP_PORT=3001
      - JWT_SECRET=jwt_secret
      - DB_USER=root
      - DB_PASS=123456
      - DB_HOST=db
      - DB_PORT=3306
      - MONGO_URI=mongodb://root:example@mongo:27017/mydatabase?authSource=admin
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"]
      timeout: 10s
      retries: 5

  db:
    image: mysql:8.0.21
    container_name: db
    platform: linux/x86_64
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=RestaurantMegement
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE

  mongo:
    image: mongo:4.4
    container_name: mongo
    platform: linux/x86_64
    ports:
      - 27017:27017  # Porta padrão do MongoDB
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo_data:/data/db  # Volume para persistência de dados do MongoDB
    restart: 'always'
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      timeout: 10s
      retries: 5

volumes:
  mongo_data:
